import type { DefinedTypeLinkNode } from '../linkNodes';
import type { CamelCaseString } from '../shared';
import type { StructValueNode } from './StructValueNode';
import type { TupleValueNode } from './TupleValueNode';
export interface EnumValueNode<TEnum extends DefinedTypeLinkNode = DefinedTypeLinkNode, TValue extends StructValueNode | TupleValueNode | undefined = StructValueNode | TupleValueNode | undefined> {
    readonly kind: 'enumValueNode';
    readonly variant: CamelCaseString;
    readonly enum: TEnum;
    readonly value?: TValue;
}
//# sourceMappingURL=EnumValueNode.d.ts.map