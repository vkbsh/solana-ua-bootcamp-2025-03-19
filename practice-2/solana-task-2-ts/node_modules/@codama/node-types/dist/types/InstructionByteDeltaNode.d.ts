import type { ArgumentValueNode, ResolverValueNode } from './contextualValueNodes';
import type { AccountLinkNode } from './linkNodes';
import type { NumberValueNode } from './valueNodes';
type InstructionByteDeltaNodeValue = AccountLinkNode | ArgumentValueNode | NumberValueNode | ResolverValueNode;
export interface InstructionByteDeltaNode<TValue extends InstructionByteDeltaNodeValue = InstructionByteDeltaNodeValue> {
    readonly kind: 'instructionByteDeltaNode';
    readonly withHeader: boolean;
    readonly subtract?: boolean;
    readonly value: TValue;
}
export {};
//# sourceMappingURL=InstructionByteDeltaNode.d.ts.map