import { ProgramOptions } from './programOptions';
export type Config = Readonly<{
    idl?: string;
    scripts?: ScriptsConfig;
    before?: readonly VisitorConfig[];
}>;
export type ScriptName = string;
export type ScriptConfig = VisitorConfig | readonly VisitorConfig[];
export type ScriptsConfig = Readonly<Record<ScriptName, ScriptConfig>>;
export type VisitorPath = string;
export type VisitorConfig<T extends readonly unknown[] = readonly unknown[]> = VisitorConfigObject<T> | VisitorPath;
export type VisitorConfigObject<T extends readonly unknown[] = readonly unknown[]> = Readonly<{
    args?: T;
    from: VisitorPath;
}>;
export declare function getConfig(options: Pick<ProgramOptions, 'config'>): Promise<[Config, string | null]>;
//# sourceMappingURL=config.d.ts.map