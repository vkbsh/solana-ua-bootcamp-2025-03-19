import type { BytesEncoding, ConstantValueNode, TypeNode, ValueNode } from '@codama/node-types';
export declare function constantValueNode<TType extends TypeNode, TValue extends ValueNode>(type: TType, value: TValue): ConstantValueNode<TType, TValue>;
export declare function constantValueNodeFromString<TEncoding extends BytesEncoding>(encoding: TEncoding, string: string): ConstantValueNode<import("@codama/node-types").StringTypeNode<TEncoding>, import("@codama/node-types").StringValueNode>;
export declare function constantValueNodeFromBytes<TEncoding extends BytesEncoding>(encoding: TEncoding, data: string): ConstantValueNode<import("@codama/node-types").BytesTypeNode, import("@codama/node-types").BytesValueNode>;
//# sourceMappingURL=ConstantValueNode.d.ts.map