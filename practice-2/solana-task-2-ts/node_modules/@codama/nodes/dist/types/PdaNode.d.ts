import type { PdaNode, PdaSeedNode } from '@codama/node-types';
import { DocsInput } from './shared';
export type PdaNodeInput<TSeeds extends PdaSeedNode[] = PdaSeedNode[]> = Omit<PdaNode<TSeeds>, 'docs' | 'kind' | 'name'> & {
    readonly docs?: DocsInput;
    readonly name: string;
};
export declare function pdaNode<const TSeeds extends PdaSeedNode[]>(input: PdaNodeInput<TSeeds>): PdaNode<TSeeds>;
//# sourceMappingURL=PdaNode.d.ts.map