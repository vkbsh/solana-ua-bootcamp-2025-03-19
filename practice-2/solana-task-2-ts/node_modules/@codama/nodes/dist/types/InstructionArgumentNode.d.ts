import type { InstructionArgumentNode, InstructionInputValueNode } from '@codama/node-types';
import { DocsInput } from './shared';
export type InstructionArgumentNodeInput<TDefaultValue extends InstructionInputValueNode | undefined = InstructionInputValueNode | undefined> = Omit<InstructionArgumentNode<TDefaultValue>, 'docs' | 'kind' | 'name'> & {
    readonly docs?: DocsInput;
    readonly name: string;
};
export declare function instructionArgumentNode<TDefaultValue extends InstructionInputValueNode | undefined = undefined>(input: InstructionArgumentNodeInput<TDefaultValue>): InstructionArgumentNode<TDefaultValue>;
export declare function structTypeNodeFromInstructionArgumentNodes(nodes: InstructionArgumentNode[]): import("@codama/node-types").StructTypeNode<(import("@codama/node-types").StructFieldTypeNode<import("@codama/node-types").TypeNode, import("@codama/node-types").ArrayValueNode<import("@codama/node-types").StandaloneValueNode[]> | import("@codama/node-types").BooleanValueNode | import("@codama/node-types").BytesValueNode | import("@codama/node-types").ConstantValueNode<import("@codama/node-types").TypeNode, import("@codama/node-types").StandaloneValueNode> | import("@codama/node-types").EnumValueNode<import("@codama/node-types").DefinedTypeLinkNode<import("@codama/node-types").ProgramLinkNode | undefined>, import("@codama/node-types").StructValueNode<import("@codama/node-types").StructFieldValueNode<import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").TupleValueNode<import("@codama/node-types").StandaloneValueNode[]> | undefined> | import("@codama/node-types").MapValueNode<import("@codama/node-types").MapEntryValueNode<import("@codama/node-types").StandaloneValueNode, import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").NoneValueNode | import("@codama/node-types").NumberValueNode | import("@codama/node-types").PublicKeyValueNode | import("@codama/node-types").SetValueNode<import("@codama/node-types").StandaloneValueNode[]> | import("@codama/node-types").SomeValueNode<import("@codama/node-types").StandaloneValueNode> | import("@codama/node-types").StringValueNode | import("@codama/node-types").StructValueNode<import("@codama/node-types").StructFieldValueNode<import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").TupleValueNode<import("@codama/node-types").StandaloneValueNode[]>> | import("@codama/node-types").StructFieldTypeNode<import("@codama/node-types").TypeNode, undefined>)[]>;
export declare function structFieldTypeNodeFromInstructionArgumentNode(node: InstructionArgumentNode): import("@codama/node-types").StructFieldTypeNode<import("@codama/node-types").TypeNode, import("@codama/node-types").ArrayValueNode<import("@codama/node-types").StandaloneValueNode[]> | import("@codama/node-types").BooleanValueNode | import("@codama/node-types").BytesValueNode | import("@codama/node-types").ConstantValueNode<import("@codama/node-types").TypeNode, import("@codama/node-types").StandaloneValueNode> | import("@codama/node-types").EnumValueNode<import("@codama/node-types").DefinedTypeLinkNode<import("@codama/node-types").ProgramLinkNode | undefined>, import("@codama/node-types").StructValueNode<import("@codama/node-types").StructFieldValueNode<import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").TupleValueNode<import("@codama/node-types").StandaloneValueNode[]> | undefined> | import("@codama/node-types").MapValueNode<import("@codama/node-types").MapEntryValueNode<import("@codama/node-types").StandaloneValueNode, import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").NoneValueNode | import("@codama/node-types").NumberValueNode | import("@codama/node-types").PublicKeyValueNode | import("@codama/node-types").SetValueNode<import("@codama/node-types").StandaloneValueNode[]> | import("@codama/node-types").SomeValueNode<import("@codama/node-types").StandaloneValueNode> | import("@codama/node-types").StringValueNode | import("@codama/node-types").StructValueNode<import("@codama/node-types").StructFieldValueNode<import("@codama/node-types").StandaloneValueNode>[]> | import("@codama/node-types").TupleValueNode<import("@codama/node-types").StandaloneValueNode[]>> | import("@codama/node-types").StructFieldTypeNode<import("@codama/node-types").TypeNode, undefined>;
//# sourceMappingURL=InstructionArgumentNode.d.ts.map