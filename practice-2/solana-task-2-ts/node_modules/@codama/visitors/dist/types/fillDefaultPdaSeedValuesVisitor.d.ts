import { InstructionInputValueNode, InstructionNode } from '@codama/nodes';
import { LinkableDictionary, NodePath, Visitor } from '@codama/visitors-core';
/**
 * Fills in default values for variable PDA seeds that are not explicitly provided.
 * Namely, public key seeds are filled with an accountValueNode using the seed name
 * and other types of seeds are filled with an argumentValueNode using the seed name.
 *
 * An instruction and linkable dictionary are required to determine which seeds are
 * valids and to find the pdaLinkNode for the seed respectively. Any invalid default
 * seed won't be filled in.
 *
 * Strict mode goes one step further and will throw an error if the final array of
 * pdaSeedValueNodes contains invalid seeds or if there aren't enough variable seeds.
 */
export declare function fillDefaultPdaSeedValuesVisitor(instructionPath: NodePath<InstructionNode>, linkables: LinkableDictionary, strictMode?: boolean): Visitor<InstructionInputValueNode, InstructionInputValueNode["kind"]>;
//# sourceMappingURL=fillDefaultPdaSeedValuesVisitor.d.ts.map